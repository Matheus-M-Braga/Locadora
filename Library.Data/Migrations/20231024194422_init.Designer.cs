// <auto-generated />
using System;
using Library.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231024194422_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("Library.Business.Models.Books", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PublisherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Release")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rented")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "J.R.R. Tolkien",
                            Name = "O Senhor dos Anéis",
                            PublisherId = 1,
                            Quantity = 10,
                            Release = 1954,
                            Rented = 0
                        },
                        new
                        {
                            Id = 2,
                            Author = "J.K. Rowling",
                            Name = "Harry Potter e a Pedra Filosofal",
                            PublisherId = 2,
                            Quantity = 1,
                            Release = 1997,
                            Rented = 0
                        },
                        new
                        {
                            Id = 3,
                            Author = "Miguel de Cervantes",
                            Name = "Dom Quixote",
                            PublisherId = 3,
                            Quantity = 1,
                            Release = 1605,
                            Rented = 0
                        },
                        new
                        {
                            Id = 4,
                            Author = "Gabriel García Márquez",
                            Name = "Cem Anos de Solidão",
                            PublisherId = 4,
                            Quantity = 12,
                            Release = 1954,
                            Rented = 0
                        },
                        new
                        {
                            Id = 5,
                            Author = "George Orwell",
                            Name = "1984",
                            PublisherId = 5,
                            Quantity = 7,
                            Release = 1954,
                            Rented = 0
                        },
                        new
                        {
                            Id = 6,
                            Author = "George Orwell",
                            Name = "A Revolução dos Bichos",
                            PublisherId = 1,
                            Quantity = 5,
                            Release = 1954,
                            Rented = 0
                        },
                        new
                        {
                            Id = 7,
                            Author = "Fiódor Dostoiévski",
                            Name = "Crime e Castigo",
                            PublisherId = 2,
                            Quantity = 3,
                            Release = 1954,
                            Rented = 0
                        },
                        new
                        {
                            Id = 8,
                            Author = "Antoine de Saint-Exupéry",
                            Name = "O Pequeno Príncipe",
                            PublisherId = 3,
                            Quantity = 8,
                            Release = 1954,
                            Rented = 0
                        },
                        new
                        {
                            Id = 9,
                            Author = "Machado de Assis",
                            Name = "Memórias Póstumas de Brás Cubas",
                            PublisherId = 4,
                            Quantity = 6,
                            Release = 1954,
                            Rented = 0
                        },
                        new
                        {
                            Id = 10,
                            Author = "Franz Kafka",
                            Name = "A Metamorfose",
                            PublisherId = 5,
                            Quantity = 4,
                            Release = 1954,
                            Rented = 0
                        });
                });

            modelBuilder.Entity("Library.Business.Models.Publishers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "São Paulo",
                            Name = "Companhia das Letras"
                        },
                        new
                        {
                            Id = 2,
                            City = "Rio de Janeiro",
                            Name = "Aleph"
                        },
                        new
                        {
                            Id = 3,
                            City = "Rio De Janeiro",
                            Name = "Editora Intrínseca"
                        },
                        new
                        {
                            Id = 4,
                            City = "Rio de Janeiro",
                            Name = "Editora Rocco"
                        },
                        new
                        {
                            Id = 5,
                            City = "Porto Alegre",
                            Name = "Darkside"
                        },
                        new
                        {
                            Id = 6,
                            City = "Nova Iorque",
                            Name = "Harper Collins"
                        },
                        new
                        {
                            Id = 7,
                            City = "Rio de Janeiro",
                            Name = "Editora Arqueiro"
                        },
                        new
                        {
                            Id = 8,
                            City = "Lisboa",
                            Name = "Leya"
                        },
                        new
                        {
                            Id = 9,
                            City = "São Paulo",
                            Name = "Saraiva"
                        },
                        new
                        {
                            Id = 10,
                            City = "Porto Alegre",
                            Name = "Sextante"
                        });
                });

            modelBuilder.Entity("Library.Business.Models.Rentals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ForecastDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("Library.Business.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rua A",
                            City = "Fortaleza",
                            Email = "lauro@yahoo.com",
                            Name = "Lauro"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Rua B",
                            City = "Crato",
                            Email = "roberto@gmail.com",
                            Name = "Roberto"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Rua C",
                            City = "Caucaia",
                            Email = "ronaldo@hotmail.com",
                            Name = "Ronaldo"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Rua D",
                            City = "Recife",
                            Email = "rodrigo@gmail.com",
                            Name = "Rodrigo"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Rua E",
                            City = "Rio de Janeiro",
                            Email = "alexandre@yahoo.com",
                            Name = "Alexandre"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Rua F",
                            City = "Fortaleza",
                            Email = "isabela@gmail.com",
                            Name = "Isabela"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Rua G",
                            City = "São Paulo",
                            Email = "pedro@hotmail.com",
                            Name = "Pedro"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Rua H",
                            City = "Rio de Janeiro",
                            Email = "mariana@yahoo.com",
                            Name = "Mariana"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Rua I",
                            City = "Belo Horizonte",
                            Email = "lucas@gmail.com",
                            Name = "Lucas"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Rua J",
                            City = "Recife",
                            Email = "amanda@hotmail.com",
                            Name = "Amanda"
                        });
                });

            modelBuilder.Entity("Library.Business.Models.Books", b =>
                {
                    b.HasOne("Library.Business.Models.Publishers", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Library.Business.Models.Rentals", b =>
                {
                    b.HasOne("Library.Business.Models.Books", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Business.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
