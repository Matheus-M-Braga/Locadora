// <auto-generated />
using System;
using Locadora.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Locadora.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230912190728_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("Locadora.API.Models.Books", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Release")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Rented")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "J.R.R. Tolkien",
                            Name = "O Senhor dos Anéis",
                            PublisherId = 1,
                            Quantity = 10,
                            Release = "1954",
                            Rented = 0
                        },
                        new
                        {
                            Id = 2,
                            Author = "J.K. Rowling",
                            Name = "Harry Potter e a Pedra Filosofal",
                            PublisherId = 2,
                            Quantity = 15,
                            Release = "1997",
                            Rented = 0
                        },
                        new
                        {
                            Id = 3,
                            Author = "Miguel de Cervantes",
                            Name = "Dom Quixote",
                            PublisherId = 3,
                            Quantity = 8,
                            Release = "1605",
                            Rented = 0
                        },
                        new
                        {
                            Id = 4,
                            Author = "Gabriel García Márquez",
                            Name = "Cem Anos de Solidão",
                            PublisherId = 4,
                            Quantity = 12,
                            Release = "1967",
                            Rented = 0
                        },
                        new
                        {
                            Id = 5,
                            Author = "George Orwell",
                            Name = "1984",
                            PublisherId = 5,
                            Quantity = 7,
                            Release = "1949",
                            Rented = 0
                        });
                });

            modelBuilder.Entity("Locadora.API.Models.Publishers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "São Paulo",
                            Name = "Editora Nacional"
                        },
                        new
                        {
                            Id = 2,
                            City = "Rio de Janeiro",
                            Name = "Editora Regional"
                        },
                        new
                        {
                            Id = 3,
                            City = "Belo Horizonte",
                            Name = "Editora Local"
                        },
                        new
                        {
                            Id = 4,
                            City = "Brasília",
                            Name = "Editora Central"
                        },
                        new
                        {
                            Id = 5,
                            City = "Porto Alegre",
                            Name = "Editora do Sul"
                        });
                });

            modelBuilder.Entity("Locadora.API.Models.Rentals", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ForecastDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RentalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            ForecastDate = "2023-09-21",
                            RentalDate = "2023-09-10",
                            Status = "Pendente",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            ForecastDate = "2023-09-23",
                            RentalDate = "2023-09-12",
                            Status = "No Prazo",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            ForecastDate = "2023-09-25",
                            RentalDate = "2023-09-14",
                            Status = "Atrasado",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            ForecastDate = "2023-09-30",
                            RentalDate = "2023-09-18",
                            Status = "Pendente",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            ForecastDate = "2023-09-30",
                            RentalDate = "2023-09-20",
                            Status = "No Prazo",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Locadora.API.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rua A",
                            City = "Fortaleza",
                            Email = "lauro@yahoo.com",
                            Name = "Lauro"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Rua B",
                            City = "Crato",
                            Email = "roberto@gmail.com",
                            Name = "Roberto"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Rua C",
                            City = "Caucaia",
                            Email = "ronaldo@hotmail.com",
                            Name = "Ronaldo"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Rua D",
                            City = "Recife",
                            Email = "rodrigo@gmail.com",
                            Name = "Rodrigo"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Rua E",
                            City = "Rio de Janeiro",
                            Email = "alexandre@yahoo.com",
                            Name = "Alexandre"
                        });
                });

            modelBuilder.Entity("Locadora.API.Models.Books", b =>
                {
                    b.HasOne("Locadora.API.Models.Publishers", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Locadora.API.Models.Rentals", b =>
                {
                    b.HasOne("Locadora.API.Models.Books", "Book")
                        .WithMany("Rentals")
                        .HasForeignKey("BookId");

                    b.HasOne("Locadora.API.Models.Users", "User")
                        .WithMany("Rentals")
                        .HasForeignKey("UserId");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Locadora.API.Models.Books", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("Locadora.API.Models.Publishers", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Locadora.API.Models.Users", b =>
                {
                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
